INTERNAL MICROPROCESSOR ARCHITECTURE
• Before a program is written or instruction investigated, internal configuration of the microprocessor must be known.
• In a multiple core microprocessor each core contains the same programming model.
• Each core runs a separate task or thread simultaneously. A thread consists of a program counter, a register set, and a stack space. A task shares with peer threads its code section, data section, and operating.
The Programming Model
• 8086 through Core2 considered program visible.
- registers are used during programming and are specified by the instructions
• Other registers considered to be program invisible.
- not addressable directly during applications
Programming
       80286 and above contain program-invisible registers to control and operate protected memory.
- and other features of the microprocessor
• 80386 through Core2 microprocessors contain full 32-bit internal architectures.
• 8086 through the 80286 are fully upward compatible to the 80386 through Core2.
8086 through Core2 microprocessor.
-including the 64-bit extensions
Multipurpose Registers
• RAX - a 64-bit register (RAX), a 32-bit register(accumulator) (EAX), a 16-bit register (AX), or as either of two 8-bit registers (AH and AL).
• The accumulator is used for instructions such as multiplication, division, and some of the adjustment instructions.
• Intel plans to expand the address bus to 52 bits to address 4P (252~1015 =peta) bytes of memory.
Address Space (Main Memory: RAM)
• Address bus:16 bit ?Address Space:64 KBytes
• Address bus:20 bit ?Address Space:1 MBytes
Address bus:32 bit ?Address Space:4 GBytes
Address bus:34 bit ?Address Space:16GBytes
• Address bus:36 bit ?Address Space:64GBytes
• Address bus:38 bit ?Address
Space:256GBytes
• Address bus:52 bit ?Address Space:1015 Bytes RBX, addressable as RBX, EBX, BX, BH, BL.
- BX register (base index) sometimes holds offset address of a location in the memory system in all versions of the microprocessor
• RCX, as RCX, ECX, CX, CH, or CL.
- a (count) general-purpose register that also holds the count for various instructions
• RDX, as RDX, EDX, DX, DH, or DL.
- a (data) general-purpose register
- holds a part of the result from a multiplication or part of dividend before a division
RBP, as RBP, EBP, or BP.
- points to a memory (base pointer) location for memory data transfers
• RDI addressable as RDI, EDI, or DI.
- often addresses (destination index) string destination data for the string instructions
• RSI used as RSI, ESI, or SI.
- the (source index) register addresses source string data for the string instructions
- like RDI, RSI also functions as a general purpose
Register
R8 - R15 found in the Pentium 4 and Core2 if 64-bit extensions are enabled.
- data are addressed as 64-, 32-, 16-, or 8-bit sizes and are of general purpose
• Most applications will not use these registers until 64-bit processors are common.
- the 8-bit portion is the rightmost 8-bit only
- bits 8 to 15 are not directly addressable as a byte
Special-Purpose Registers
• Include RIP, RSP, and RFLAGS
- segment registers include CS, DS, ES, SS, FS, and GS
• RIP addresses the next instruction in a section of memory.
- defined as (instruction pointer) a code segment
• RSP addresses an area of memory called the stack.
- the (stack pointer) stores data through this pointer RFLAGS indicate the condition of the microprocessor and control its operation.
• Figure 2-2 shows the flag registers of all versions of the microprocessor.
• Flags are upward-compatible from the 8086/8088 through Core2 .
• The rightmost five and the overflow flag are changed by most arithmetic and logic operations.
- although data transfers do not affect them C (carry) holds the carry after addition or borrow after subtraction.
- also indicates error conditions
• P (parity) is the count of ones in a number expressed as even or odd. Logic 0 for odd parity; logic 1 for even parity.
- if a number contains three binary one bits, it has odd parity
- if a number contains no one bits, it has even
Parity
List of Each Flag bit, with a brief description of function.
• C (carry) holds the carry after addition or borrow after subtraction.
- also indicates error conditions
• P (parity) is the count of ones in a number expressed as even or odd. Logic 0 for odd
parity; logic 1 for even parity.
- if a number contains three binary one bits, it has odd parity; If a number contains no one bits, it has even parity
A (auxiliary carry) holds the carry (half-carry) after addition or the borrow after subtraction between bit positions 3 and 4 of the result.
• Z (zero) shows that the result of an arithmetic or logic operation is zero.
• S (sign) flag holds the arithmetic sign of the result after an arithmetic or logic instruction executes.
• T (trap) The trap flag enables trapping through an on-chip debugging feature.
I (interrupt) controls operation of the INTR (interrupt request) input pin.
• D (direction) selects increment or decrement mode for the DI and/or SI registers.
• O (overflow) occurs when signed numbers are added or subtracted.
- an overflow indicates the result has exceeded the capacity of the machine 
IOPL used in protected mode operation to select the privilege level for I/O devices.
• NT (nested task) flag indicates the current task is nested within another task in protected
mode operation.
• RF (resume) used with debugging to control resumption of execution after the next instruction.
• VM (virtual mode) flag bit selects virtual mode operation in a protected mode system.
AC, (alignment check) flag bit activates if a word or doubleword is addressed on a nonword or non-doubleword boundary.
• VIF is a copy of the interrupt flag bit available to the Pentium 4-(virtual interrupt)
• VIP (virtual) provides information about a virtual mode interrupt for (interrupt pending)
Pentium.
- used in multitasking environments to provide virtual interrupt flags ID (identification) flag indicates that the Pentium microprocessors support the CPUID instruction.
- CPUID instruction provides the system with information about the Pentium microprocessor
Segment Registers
• Generate memory addresses when combined with other registers in the microprocessor.
• Four or six segment registers in various versions of the microprocessor.
• A segment register functions differently in real mode than in protected mode.
• Following is a list of each segment register, along with its function in the system.
CS (code) segment holds code (programs and procedures) used by the microprocessor.
• DS (data) contains most data used by a program.
- Data are accessed by an offset address or contents of other registers that hold the offset address
• ES (extra) an additional data segment used by some instructions to hold destination data.
SS (stack) defines the area of memory used for the stack.
- stack entry point is determined by the stack segment and stack pointer registers
- the BP register also addresses data within the stack segment
FS and GS segments are supplemental segment registers available in 80386-Core2 microprocessors.
- allow two additional memory segments for access by programs
• Windows uses these segments for internal operations, but no definition of their usage is available.
2-2 REAL MODE MEMORY
ADDRESSING
• 80286 and above operate in either the real or protected mode.
• Real mode operation allows addressing of only the first 1M byte of memory space-even in Pentium 4 or Core2 microprocessor.
- the first 1M byte of memory is called the real memory, conventional memory, or DOS memory system
Segments and Offsets
• All real mode memory addresses must consist of a segment address plus an offset address.
- segment address defines the beginning address of any 64K-byte memory segment
- offset address selects any location within the
64K byte memory segment
• Figure 2-3 shows how the segment plus offset addressing scheme selects a memory location.
Default Segment and Offset
Registers
• The microprocessor has rules that apply to segments whenever memory is addressed.
- these define the segment and offset register combination
• The code segment register defines the start of the code segment.
• The instruction pointer locates the next instruction within the code segment.
Another of the default combinations is the stack.
- stack data are referenced through the stack segment at the memory location addressed by either the stack pointer (SP/ESP) or the pointer
(BP/EBP)
• Figure 2-4 shows a system that contains four memory segments.
- a memory segment can touch or overlap if 64K bytes of memory are not required for a segment
2-3 INTRO TO PROTECTED MODE
MEMORY ADDRESSING
• Allows access to data and programs located within & above the first 1M byte of memory.
• Protected mode is where Windows operates.
• In place of a segment address, the segment register contains a selector that selects a descriptor from a descriptor table.
• The descriptor describes the memory segment's location, length, and access rights.
Selectors and Descriptors
• The descriptor is located in the segment register & describes the location, length, and access rights of the segment of memory.
- it selects one of 8192 descriptors from one of two tables of descriptors
• In protected mode, this segment number can address any memory location in the system for the code segment.
• Indirectly, the register still selects a memory segment, but not directly as in real mode.
• Global descriptors contain segment definitions that apply to all programs.
• Local descriptors are usually unique to an application.
- a global descriptor might be called a system descriptor, and local descriptor an application descriptor
- each descriptor is 8 bytes in length
- global and local descriptor tables are a maximum of 64K bytes in length
The base address of the descriptor indicates the starting location of the memory segment.
- the paragraph boundary limitation is removed in protected mode
- segments may begin at any address
• The G, or granularity bit allows a segment length of 4K to 4G bytes in steps of 4K bytes.
- 32-bit offset address allows segment lengths of 4G bytes
- 16-bit offset address allows segment lengths of 64K bytes.
DESCRIPTORS:
• Base (B31 - B0): indicates the starting location (base address) of the memory segment. This allows segments to begin at any location in the processor's 4G bytes of memory.
• Limit (L19 - L0): contains the last offset address found in a segment. Since this field is 20 bits, the segment size could be anywhere between 1 and 1M bytes. However, if the G bit (granularity bit) is set, the value of the limit is multiplied by 4K bytes (i.e., appended with FFFH). In this case, the segment size could be anywhere between 4K and 4G bytes in steps of 4K bytes.
DESCRIPTORS... 
• AV bit: is used by some operating systems to indicate that the segment is available (AV = 1) or not available (AV = 0). D bit: If D = 0, the instructions are 16-bit instructions, compatible with the 8086-80286 microprocessors. This means that the instructions use 16-bit offset addresses and 16-bit registers by default. This mode is the 16-bit instruction mode or DOS mode. If D = 1, the instructions are32-bits by default (Windows XP works in this mode).
• Access rights byte: allows complete control over the segment. If the segment is a data segment, the direction of growth is specified. Operating systems operate in a 16- or 32-bit environment.
• DOS uses a 16-bit environment.
• Most Windows applications use a 32-bit environment called WIN32.
• MSDOS/PCDOS & Windows 3.1 operating systems require 16-bit instruction mode.
• Instruction mode is accessible only in a protected mode system such as Windows
XP? Windows Vista ?Windows 7 ?
Windows 8 ????.
• The access rights byte controls access to the protected mode segment.
- describes segment function in the system and allows complete control over the segment
- if the segment is a data segment, the direction of growth is specified
• If the segment grows beyond its limit, the operating system is interrupted, indicating a general protection fault.
• You can specify whether a data segment can be written or is write-protected. Descriptors are chosen from the descriptor table by the segment register.
- register contains a 13-bit selector field, a table selector bit, and requested privilege level field
• The TI bit selects either the global or the local descriptor table.
• Requested Privilege Level (RPL) requests the access privilege level of a memory segment.
- If privilege levels are violated, system normally indicates an application or privilege level violation
Program-Invisible Registers
• Global and local descriptor tables are found in the memory system.
• To access & specify the table addresses, 80286- Core2 contain program-invisible registers.
- not directly addressed by software
• Each segment register contains a program invisible portion used in the protected mode.
- often called cache memory because cache is any memory that stores information
When a new segment number is placed in a segment register, the microprocessor accesses a descriptor table and loads the descriptor into the program-invisible portion of the segment register.
- held there and used to access the memory segment until the segment number is changed
• This allows the microprocessor to repeatedly access a memory segment without referring to the descriptor table.
- hence the term cache
The GDTR (global descriptor table register) and IDTR (interrupt descriptor table register) contain the base address of the descriptor table and its limit.
- when protected mode operation desired, address of the global descriptor table and its limit are loaded into the GDTR
• The location of the local descriptor table is selected from the global descriptor table.
- one of the global descriptors is set up to address the local descriptor table. To access the local descriptor table, the LDTR (local descriptor table register) is loaded with a selector.
- selector accesses global descriptor table, & loads local descriptor table address, limit, & access rights into the cache portion of the LDTR.
• The TR (task register) holds a selector, which accesses a descriptor that defines a task.
- a task is most often a procedure or application
• Allows multitasking systems to switch tasks to another in a simple and orderly fashion.
